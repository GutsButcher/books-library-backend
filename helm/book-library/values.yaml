# Default values for book-library.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: gwynbliedd/book-library
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: book-library.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: book-library-tls
  #    hosts:
  #      - book-library.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Application specific configuration
app:
  port: 8080
  env:
    - name: SPRING_PROFILES_ACTIVE
      value: "kubernetes"
    - name: SERVER_PORT
      value: "8080"
    - name: SPRING_DATASOURCE_URL
      value: "jdbc:postgresql://postgresql:5432/bookdb"
    - name: SPRING_DATASOURCE_USERNAME
      value: "bookuser"
    - name: SPRING_JPA_HIBERNATE_DDL_AUTO
      value: "update"
    - name: SPRING_JPA_SHOW_SQL
      value: "false"
    - name: SPRINGDOC_SWAGGER_UI_ENABLED
      value: "true"

# PostgreSQL dependency configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgrespass"
    username: "bookuser"
    password: "bookpass"
    database: "bookdb"
  persistence:
    enabled: true
    size: 8Gi
    storageClass: ""
  service:
    port: 5432

# Probes configuration
probes:
  liveness:
    enabled: true
    httpGet:
      path: /actuator/health
      port: http
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readiness:
    enabled: true
    httpGet:
      path: /actuator/health/readiness
      port: http
    initialDelaySeconds: 30
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1

# ConfigMap for additional configuration
configMap:
  enabled: true
  data: {}
    # application.yaml: |
    #   spring:
    #     application:
    #       name: book-library

# Secrets for sensitive data
secrets:
  enabled: false
  data: {}
    # db-password: base64encodedpassword