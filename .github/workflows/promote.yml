name: Promote Image Between Environments

on:
  workflow_dispatch:
    inputs:
      source-env:
        description: 'Source environment'
        required: true
        type: choice
        options:
          - dev
          - staging
      target-env:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - staging
          - prod
      image-tag:
        description: 'Image tag to promote'
        required: true
        type: string

jobs:
  validate:
    name: Validate Promotion
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate promotion path
      run: |
        SOURCE="${{ github.event.inputs.source-env }}"
        TARGET="${{ github.event.inputs.target-env }}"
        
        # Validate promotion path
        if [[ "$SOURCE" == "dev" && "$TARGET" != "staging" ]]; then
          echo "Error: Can only promote from dev to staging"
          exit 1
        fi
        
        if [[ "$SOURCE" == "staging" && "$TARGET" != "prod" ]]; then
          echo "Error: Can only promote from staging to prod"
          exit 1
        fi
        
        if [[ "$SOURCE" == "$TARGET" ]]; then
          echo "Error: Source and target environments cannot be the same"
          exit 1
        fi
        
        echo "Promotion path validated: $SOURCE → $TARGET"

  promote:
    name: Promote Image
    runs-on: ubuntu-latest
    needs: validate
    environment: ${{ github.event.inputs.target-env }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Docker
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Promote image
      run: |
        SOURCE_TAG="${{ github.event.inputs.image-tag }}"
        TARGET_ENV="${{ github.event.inputs.target-env }}"
        NEW_TAG="${TARGET_ENV}-$(date +'%Y%m%d-%H%M%S')-promoted"
        
        # Pull source image
        docker pull gwynbliedd/book-library:${SOURCE_TAG}
        
        # Tag with new environment tag
        docker tag gwynbliedd/book-library:${SOURCE_TAG} gwynbliedd/book-library:${NEW_TAG}
        docker tag gwynbliedd/book-library:${SOURCE_TAG} gwynbliedd/book-library:${TARGET_ENV}-latest
        
        # Push new tags
        docker push gwynbliedd/book-library:${NEW_TAG}
        docker push gwynbliedd/book-library:${TARGET_ENV}-latest
        
        echo "Image promoted successfully!"
        echo "New tag: ${NEW_TAG}"
        echo "promoted-tag=${NEW_TAG}" >> $GITHUB_ENV

    - name: Trigger deployment
      uses: actions/github-script@v7
      with:
        script: |
          const targetEnv = '${{ github.event.inputs.target-env }}';
          const promotedTag = '${{ env.promoted-tag }}';
          
          let workflow_id;
          if (targetEnv === 'staging') {
            workflow_id = 'cd-staging.yml';
          } else if (targetEnv === 'prod') {
            workflow_id = 'cd-prod.yml';
          }
          
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: workflow_id,
            ref: targetEnv === 'prod' ? 'main' : targetEnv,
            inputs: {
              'image-tag': promotedTag
            }
          });
          
          console.log(`Triggered deployment to ${targetEnv} with image ${promotedTag}`);

    - name: Create promotion record
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Image Promotion: ${{ github.event.inputs.source-env }} → ${{ github.event.inputs.target-env }}`,
            body: `## Image Promotion Record
            
            - **Source Environment**: ${{ github.event.inputs.source-env }}
            - **Target Environment**: ${{ github.event.inputs.target-env }}
            - **Source Image Tag**: ${{ github.event.inputs.image-tag }}
            - **Promoted Image Tag**: ${{ env.promoted-tag }}
            - **Promoted By**: @${{ github.actor }}
            - **Date**: ${new Date().toISOString()}
            
            ### Deployment Status
            - [ ] Deployment triggered
            - [ ] Health checks passed
            - [ ] Smoke tests passed
            - [ ] Monitoring verified`,
            labels: ['promotion', '${{ github.event.inputs.target-env }}']
          });