name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [dev, staging]

env:
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: gwynbliedd/book-library

jobs:
  deploy-preview:
    name: Deploy PR Preview
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate preview namespace
      id: preview
      run: |
        PR_NUMBER=${{ github.event.pull_request.number }}
        NAMESPACE="book-library-pr-${PR_NUMBER}"
        RELEASE_NAME="book-library-pr-${PR_NUMBER}"
        echo "namespace=${NAMESPACE}" >> $GITHUB_OUTPUT
        echo "release-name=${RELEASE_NAME}" >> $GITHUB_OUTPUT

    - name: Setup Java and Maven
      uses: ./.github/actions/setup-java-maven
      with:
        java-version: '17'

    - name: Build application
      run: mvn clean package -DskipTests

    - name: Build and Push Docker Image
      id: docker-build
      uses: ./.github/actions/docker-build-push
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        image-name: ${{ env.IMAGE_NAME }}
        push: true

    - name: Deploy PR Preview
      uses: ./.github/actions/helm-deploy
      with:
        release-name: ${{ steps.preview.outputs.release-name }}
        namespace: ${{ steps.preview.outputs.namespace }}
        environment: dev
        image-tag: pr-${{ github.event.pull_request.number }}-${GITHUB_SHA::8}
        kubeconfig: ${{ secrets.KUBECONFIG_DEV }}
        timeout: 5m

    - name: Comment PR
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const namespace = '${{ steps.preview.outputs.namespace }}';
          const url = `https://pr-${prNumber}.dev-book-library.example.com`;
          
          const comment = `## ðŸš€ Preview Deployment Ready!
          
          Your PR has been deployed to a preview environment:
          
          - **URL**: ${url}
          - **Namespace**: ${namespace}
          - **Image**: pr-${prNumber}-${context.sha.substring(0, 8)}
          
          The preview will be automatically cleaned up when the PR is closed.`;
          
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: comment
          });

  cleanup-preview:
    name: Cleanup PR Preview
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate preview namespace
      id: preview
      run: |
        PR_NUMBER=${{ github.event.pull_request.number }}
        NAMESPACE="book-library-pr-${PR_NUMBER}"
        RELEASE_NAME="book-library-pr-${PR_NUMBER}"
        echo "namespace=${NAMESPACE}" >> $GITHUB_OUTPUT
        echo "release-name=${RELEASE_NAME}" >> $GITHUB_OUTPUT

    - name: Setup kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG_DEV }}" | base64 -d > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    - name: Delete preview deployment
      run: |
        helm uninstall ${{ steps.preview.outputs.release-name }} -n ${{ steps.preview.outputs.namespace }} || true
        kubectl delete namespace ${{ steps.preview.outputs.namespace }} --wait=false || true

    - name: Comment PR
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          
          const comment = `## ðŸ§¹ Preview Deployment Cleaned Up
          
          The preview deployment for PR #${prNumber} has been removed.`;
          
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: comment
          });