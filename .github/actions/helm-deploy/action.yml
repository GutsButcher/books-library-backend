name: 'Helm Deploy'
description: 'Deploys application using Helm'
inputs:
  release-name:
    description: 'Helm release name'
    required: true
  namespace:
    description: 'Kubernetes namespace'
    required: true
  environment:
    description: 'Environment (dev, staging, prod)'
    required: true
  image-tag:
    description: 'Docker image tag to deploy'
    required: true
  kubeconfig:
    description: 'Kubeconfig content'
    required: true
  helm-version:
    description: 'Helm version'
    required: false
    default: 'v3.13.0'
  timeout:
    description: 'Helm timeout'
    required: false
    default: '10m'
  dry-run:
    description: 'Perform a dry run'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: ${{ inputs.helm-version }}

    - name: Set up Kubeconfig
      shell: bash
      run: |
        mkdir -p $HOME/.kube
        echo "${{ inputs.kubeconfig }}" | base64 -d > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    - name: Add Helm dependencies
      shell: bash
      run: |
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo update

    - name: Update Helm dependencies
      shell: bash
      working-directory: ./helm/book-library
      run: |
        helm dependency update

    - name: Deploy with Helm
      shell: bash
      working-directory: ./helm/book-library
      run: |
        HELM_ARGS=(
          "upgrade"
          "--install"
          "${{ inputs.release-name }}"
          "."
          "--namespace=${{ inputs.namespace }}"
          "--create-namespace"
          "--values=values.yaml"
          "--values=values-${{ inputs.environment }}.yaml"
          "--set=image.tag=${{ inputs.image-tag }}"
          "--timeout=${{ inputs.timeout }}"
          "--wait"
          "--atomic"
        )
        
        if [ "${{ inputs.dry-run }}" == "true" ]; then
          HELM_ARGS+=("--dry-run")
          HELM_ARGS+=("--debug")
        fi
        
        helm "${HELM_ARGS[@]}"

    - name: Get deployment status
      if: inputs.dry-run == 'false'
      shell: bash
      run: |
        echo "Deployment status:"
        helm status ${{ inputs.release-name }} -n ${{ inputs.namespace }}
        echo ""
        echo "Pods status:"
        kubectl get pods -n ${{ inputs.namespace }} -l app.kubernetes.io/instance=${{ inputs.release-name }}